dnl Process this file with autoconf to produce a configure script.
dnl
dnl (C)Copyright 2001-2010 by Hiroshi Takekawa
dnl This file is part of multiskkserv.
dnl
dnl Last Modified: Thu Jan 28 09:04:24 2010.
dnl
dnl This software is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU General Public License version 2 as
dnl published by the Free Software Foundation.
dnl
dnl This software is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA

AC_INIT([multiskkserv], [20100128], [sian@big.or.jp])
AC_CONFIG_SRCDIR([src/multiskkserv.c])
AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE
AC_PROG_LIBTOOL

# Checks for programs.
dnl AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
dnl AC_PROG_RANLIB
AC_PROG_AWK

# Checks for libraries.
available_pthread=no
AC_CHECK_HEADER(pthread.h, [
  AC_CHECK_LIB(pthread, pthread_create, [ available_pthread=yes; LIBADD_PTHREAD=-lpthread; ], [
    AC_CHECK_LIB(c_r, pthread_create, [ available_pthread=yes; LIBADD_PTHREAD=-lc_r; ], [
      AC_CHECK_FUNC(pthread_create, [ available_pthread=yes; ]) ]) ]) ])
if test "$available_pthread" = "yes"; then
  AC_DEFINE(USE_PTHREAD,,[ Define if you have libpthread ])
  CFLAGS="$CFLAGS -D_REENTRANT"
fi
AM_CONDITIONAL(HAVE_PTHREAD, test "$available_pthread" = "yes")
AC_SUBST(LIBADD_PTHREAD)

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h malloc.h netdb.h netinet/in.h shadow.h stdlib.h string.h sys/param.h sys/socket.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_MMAP
AC_FUNC_REALLOC
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([gethostbyname gethostname inet_ntoa memmove memset munmap socket strcasecmp strchr strdup strerror strrchr strtol strtoul])

available_getaddrinfo=no
AC_CHECK_FUNC(getaddrinfo, [ available_getaddrinfo=yes; AC_DEFINE(HAVE_GETADDRINFO, 1, [Define if you have the 'getaddrinfo' function.]) ])
AM_CONDITIONAL(HAVE_GETADDRINFO, test "$available_getaddrinfo" = "yes")

available_getnameinfo=no
AC_CHECK_FUNC(getnameinfo, [ available_getnameinfo=yes; AC_DEFINE(HAVE_GETNAMEINFO, 1, [Define if you have the 'getnameinfo' function.]) ])
dnl AM_CONDITIONAL(HAVE_GETNAMEINFO, test "$available_getnameinfo" = "yes")

# Options
dnl debug option
AC_ARG_ENABLE(debug,
        [  --enable-debug          build a debugging version.],
        [ enable_debug=$enableval ],
        [ enable_debug=no ])
test "$enable_debug" = yes && AC_DEFINE(DEBUG, 1, [Define if you want to debug.]
)

dnl warning option
AC_ARG_ENABLE(warnings,
        [  --enable-warnings       enable more warnings.],
        [ enable_warnings=$enableval ],
        [ enable_warnings=no ])
test "$enable_debug" = yes && AC_DEFINE(DEBUG, 1, [Define if you want to debug.]
)

CDB_DIR=""
AC_ARG_WITH(cdb,
  [  --with-cdb              Specify cdb path, auto.  Use included tinycdb if unspecified. ],
  [ with_cdb=$withval ],
  [ with_cdb=no ])

available_tinycdb=yes
available_cdb=no
AC_MSG_CHECKING(cdb)
if test "$with_cdb" = "no"; then
   AC_MSG_RESULT([included tinycdb])
   CDB_INCLUDES="-I\$(top_srcdir)/tinycdb"
   CDB_DIR="tinycdb"
   LIBADD_CDB="\$(top_builddir)/tinycdb/libtinycdb.la"
else
  if test "$with_cdb" = "yes"; then
    for i in /usr/local /usr; do
      if test -d "$i/include" -a -f "$i/include/cdb.h"; then
        CDB_DIR="$i"
        CDB_INCLUDES="-I$i/include"
        available_cdb="yes"
        for j in cdb.a buffer.a unix.a byte.a alloc.a; do
          if test -f "$i/lib/$j"; then
            LIBADD_CDB="$LIBADD_CDB $i/lib/$j"
          else
	      available_cdb="no"
	      break
          fi
        done
        if test "$available_cdb" = "yes"; then
	    break
	fi
      fi
    done
  else
    if test -d "$with_cdb" -a -f "$with_cdb/cdb.h"; then
      CDB_DIR="$with_cdb"
      CDB_INCLUDES="-I$with_cdb"
      available_cdb="yes"
      for j in cdb.a buffer.a unix.a byte.a alloc.a; do
        if test -f "$with_cdb/$j"; then
          LIBADD_CDB="$LIBADD_CDB $with_cdb/$j"
        else
          available_cdb="no"
	  break
        fi
      done
    fi
  fi
  if test "$available_cdb" = "yes"; then
    AC_MSG_RESULT([cdb found, path: $CDB_DIR])
  else
    AC_MSG_ERROR([cdb not found])
  fi
fi

AM_CONDITIONAL(BUILD_TINYCDB, test "$available_cdb" = "no")
if test "$available_cdb" = "no"; then
  AC_DEFINE(USE_TINYCDB, 1, [Use tinycdb])
fi
AC_SUBST(CDB_INCLUDES)
AC_SUBST(LIBADD_CDB)

if test "$CC" = "gcc"; then
  CFLAGS="$CFLAGS -pipe -Wall"
  test "$enable_warnings" = "yes" && CFLAGS="$CFLAGS -Werror -Wstrict-prototypes -Wwrite-strings"
fi

AC_CONFIG_FILES([lib/Makefile tinycdb/Makefile Makefile src/Makefile tools/Makefile])
AC_OUTPUT
